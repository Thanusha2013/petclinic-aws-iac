name: CI-CD-Pipeline

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform -chdir=aws-terraform init

      - name: Terraform Plan
        run: terraform -chdir=aws-terraform plan

      - name: Terraform Apply
        run: terraform -chdir=aws-terraform apply -auto-approve

      - name: Get ECR Repository URL
        id: ecr
        run: |
         echo "ECR_REPO=$(terraform -chdir=aws-terraform output -raw ecr_repo | tr -d '\n' | tr -d '\r')" >> $GITHUB_ENV


  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
         echo "Logging in to Amazon ECR..."
         echo "ECR_REPO=$ECR_REPO"
         if [ -z "$ECR_REPO" ]; then
         echo "‚ùå ERROR: ECR_REPO is empty. Check Terraform output or previous step."
         exit 1
         fi
         aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $(echo $ECR_REPO | cut -d'/' -f1)


      - name: Build Docker Image
        run: |
          docker build -t spring-petclinic .
          docker tag spring-petclinic:latest $ECR_REPO:latest

      - name: Push Docker Image to ECR
        run: docker push $ECR_REPO:latest

  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update ECS Service
        run: |
          ECS_CLUSTER=$(terraform -chdir=aws-terraform output -raw ecs_cluster_name)
          ECS_SERVICE=$(terraform -chdir=aws-terraform output -raw ecs_service_name)
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
