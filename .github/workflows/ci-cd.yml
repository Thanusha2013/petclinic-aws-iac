name: Build and Deploy Spring PetClinic

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Java 25 for Maven build
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 25

      # Set up Maven cache
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      # Build Spring PetClinic app
      - name: Build with Maven
        run: mvn -DskipTests package

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      # Initialize Terraform
      - name: Terraform Init
        run: terraform -chdir=aws-terraform init

      # Terraform Apply
      - name: Terraform Apply
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        run: terraform -chdir=aws-terraform apply -auto-approve

      # Save Terraform Outputs (fixed format issue)
      - name: Save Terraform Outputs
        id: tfoutputs
        run: |
          REPO_URL=$(terraform -chdir=aws-terraform output -raw ecr_repo 2>/dev/null | grep -Eo '^[a-zA-Z0-9\.\-:/]+')
          echo "ECR_REPO=$REPO_URL" >> $GITHUB_ENV
          echo "ECR_REPO is set to: $REPO_URL"

      # Log in to AWS ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin $ECR_REPO

      # Build Docker image
      - name: Build Docker image
        run: docker build -t $ECR_REPO:latest .

      # Push to ECR
      - name: Push Docker image to ECR
        run: docker push $ECR_REPO:latest

      # Optional: Push to Docker Hub
      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Image to Docker Hub
        run: |
          docker tag $ECR_REPO:latest thanusha455/spring-petclinic:latest
          docker push thanusha455/spring-petclinic:latest
